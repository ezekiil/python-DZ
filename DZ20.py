'''В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
В случае с английским алфавитом очки распределяются так:
● A, E, I, O, U, L, N, S, T, R – 1 очко;
● D, G – 2 очка;
● B, C, M, P – 3 очка;
● F, H, V, W, Y – 4 очка;
● K – 5 очков;
● J, X – 8 очков;
● Q, Z – 10 очков.

А русские буквы оцениваются так:
● А, В, Е, И, Н, О, Р, С, Т – 1 очко;
● Д, К, Л, М, П, У – 2 очка;
● Б, Г, Ё, Ь, Я – 3 очка;
● Й, Ы – 4 очка;
● Ж, З, Х, Ц, Ч – 5 очков;
● Ш, Э, Ю – 8 очков;
● Ф, Щ, Ъ – 10 очков.

Напишите программу, которая вычисляет стоимость введенного пользователем слова.
Будем считать, что на вход подается только одно слово,
которое содержит либо только английские, либо только русские буквы.

Ввод:
ноутбук

Вывод:
12
'''

# import re # подключаем модуль регулярных выражений
# def Scrabble(text): # функция для проверки слов
#     return bool(re.search("[а-яА-Я]", text))
# создаем словари, где ключами будут очки, а значениями – строки из букв
Rus = { 1:"АВЕИНОРСТAEIOULNSTR", 2:"ДКЛМПУDG", 3:"БГЁЬЯBCMP", 4:"ЙЫFHVWY", 5:"ЖЗХЦЧK", 8:"ШЭЮJX", 10:"ФЩЪQZ"}
# Eng = { 1:"AEIOULNSTR", 2:"DG", 3:"BCMP", 4:"FHVWY", 5:"K", 8:"JX", 10:"QZ"}

# text = input("Введите слово: ").upper()

# # Метод items() позволяет обращаться к ключам и значениям одновременно –
# # если очередная буква в слове входит в одно из значений, генератор добавит ключ в список,
# # а метод списка sum() подсчитает стоимость всего слова:

# if Scrabble(text):
#     print(sum([k for i in text for k, v in Rus.items() if i in v]))
# else:
#     print(sum([k for i in text for k, v in Eng.items() if i in v]))


k = 'laptop'
text = k.upper()
sum = 0
for i in text:
    for x, y in Rus.items():
        if i in y:
            sum += x
    # for x, y in Eng.items():
    #     if i in Eng:
    #         sum += x
print(sum)



